{"version":3,"sources":["logo.svg","Components/Navbar.js","Components/Footer.js","Sections/Profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Example","props","useState","Navbar","color","light","expand","NavbarBrand","href","Footer","class","Container","React","Component","library","add","fab","faEnvelope","Profile","className","Row","Col","sm","style","fontWeight","marginTop","mask","role","aria-label","icon","size","justifyContent","marginBottom","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+JAAAA,EAAOC,QAAU,IAA0B,kC,mLC8B5BC,EAdC,SAACC,GAAW,IAAD,EACGC,oBAAS,GADZ,6BAKzB,OACE,6BACE,kBAACC,EAAA,EAAD,CAAQC,MAAM,QAAQC,OAAK,EAACC,OAAO,MACjC,kBAACC,EAAA,EAAD,CAAaC,KAAK,KAAlB,6B,wCCXOC,E,uKATP,OACI,yBAAKC,MAAM,UACP,kBAACC,EAAA,EAAD,KACI,+E,GALCC,IAAMC,W,sDCM3BC,IAAQC,IAAIC,IAAIC,K,IAuCDC,E,uKApCP,OACI,yBAAKC,UAAU,WACX,kBAACR,EAAA,EAAD,KACI,kBAACS,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACA,iDACA,kBAAC,IAAD,KAAQ,uDAAR,KACA,wBAAIC,MAAO,CAACC,WAAY,SAAUC,UAAU,KAA5C,UACW,kBAAC,IAAD,CAAUC,MAAM,GACnB,4CAAiB,0BAAMC,KAAK,MAAMC,aAAW,QAA5B,iBACjB,sCAAW,0BAAMD,KAAK,MAAMC,aAAW,SAA5B,iBACX,0CAAe,0BAAMD,KAAK,MAAMC,aAAW,QAA5B,iBACf,sCAAW,0BAAMD,KAAK,MAAMC,aAAW,QAA5B,mBAGvB,kBAACR,EAAA,EAAD,CAAKD,UAAU,WAAWI,MAAO,CAACE,UAAU,KACxC,kBAACJ,EAAA,EAAD,KACI,uBAAGb,KAAK,kEAAiE,kBAAC,IAAD,CAAiBqB,KAAM,CAAC,MAAO,YAAaC,KAAK,QAC1H,uBAAGtB,KAAK,iCAAgC,kBAAC,IAAD,CAAiBqB,KAAM,CAAC,MAAO,UAAWC,KAAK,QACvF,uBAAGtB,KAAK,iCAAgC,kBAAC,IAAD,CAAiBqB,KAAM,CAAC,MAAO,UAAWC,KAAK,QACvF,uBAAGtB,KAAK,iCAAgC,kBAAC,IAAD,CAAiBqB,KAAK,WAAWC,KAAK,QAC9E,uBAAGtB,KAAK,qDAAoD,kBAAC,IAAD,CAAiBqB,KAAM,CAAC,MAAO,WAAYC,KAAK,WAIxH,kBAACT,EAAA,EAAD,CAAKC,GAAG,IAAIC,MAAO,CAACQ,eAAe,SAAUC,aAAa,SACtD,6BACA,oI,GA7BNpB,IAAMC,WCSboB,MAXf,WACE,OAEE,yBAAKd,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCDce,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d2c544d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText\r\n} from 'reactstrap';\r\n\r\nconst Example = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">MKI's Personal Website</NavbarBrand>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Example;","import React from 'react';\r\nimport  {Container} from 'reactstrap';\r\nclass Footer extends React.Component{\r\n    render(){\r\n        return (\r\n            <div class=\"footer\">\r\n                <Container>\r\n                    <span>¬©Ô∏è Mahardika Krisna Ihsani 2020</span>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Footer;","import React from 'react';\r\nimport TextLoop from \"react-text-loop\";\r\nimport  {Container, Row, Col} from 'reactstrap';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope} from '@fortawesome/free-solid-svg-icons';\r\nimport { fab } from '@fortawesome/free-brands-svg-icons';\r\nimport Typing from 'react-typing-animation';\r\nlibrary.add(fab,faEnvelope);\r\nclass Profile extends React.Component {\r\n    render(){\r\n        return (\r\n            <div className=\"profile\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col sm=\"6\">\r\n                                <h1>Hello, my name is</h1>\r\n                                <Typing><h2>Mahardika Krisna Ihsani</h2> </Typing>\r\n                                <h3 style={{fontWeight: 'normal', marginTop:30}}>\r\n                                    I'm a  <TextLoop mask={true}>\r\n                                        <span>programmer <span role=\"img\" aria-label=\"tech\">üíª</span></span>\r\n                                        <span>weeb <span role=\"img\" aria-label=\"japan\">üéå</span></span>\r\n                                        <span>dataholic<span role=\"img\" aria-label=\"data\">üìà</span></span>\r\n                                        <span>gamer<span role=\"img\" aria-label=\"game\">üéÆ</span></span>\r\n                                    </TextLoop>\r\n                                </h3>\r\n                            <Row className=\"contacts\" style={{marginTop:60}}>\r\n                                <Col>\r\n                                    <a href=\"https://www.linkedin.com/in/mahardika-krisna-ihsani-8724a0166/\"><FontAwesomeIcon icon={['fab', 'linkedin']} size=\"lg\"/></a>\r\n                                    <a href=\"https://github.com/codefire53\"><FontAwesomeIcon icon={['fab', 'github']} size=\"lg\" /></a>\r\n                                    <a href=\"https://gitlab.com/codefire53\"><FontAwesomeIcon icon={['fab', 'gitlab']} size=\"lg\" /></a>\r\n                                    <a href=\"mailto:krisnaihsani@gmail.com\"><FontAwesomeIcon icon='envelope' size=\"lg\" /></a>\r\n                                    <a href=\"https://discordapp.com/channels/@codefire52/0579/\"><FontAwesomeIcon icon={['fab', 'discord']} size=\"lg\" /></a>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col sm=\"6\" style={{justifyContent:'center', marginBottom:'50px'}}>\r\n                            <br></br>\r\n                            <i>I am a hard-working person and also team-working person. Aspired to become life-long learner.</i>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Typing from 'react-typing-animation';\nimport Navbar from './Components/Navbar';\nimport Footer from './Components/Footer';\nimport Profile from './Sections/Profile';\nfunction App() {\n  return (\n\n    <div className=\"App\">\n      <Navbar />\n      <Profile />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './bootstrap-4.0.0-dist/css/bootstrap.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}